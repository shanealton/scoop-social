<script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
  function onFileChange(event) {
    const file = event.target.files[0]
    const imageSrc =  window.URL.createObjectURL(file)
    document.getElementById('selectedImage').src = imageSrc
  }
</script>

<%- exposeLocalsToBrowser() %>

<div id="app">
  <div class="post-form">
    <form action="/post" method="POST" enctype="multipart/form-data">
      <input type="text" name="postBody" placeholder="Say something...">
      <button type="submit">Create Post</button>

      <div class="file-selector">
        <input name="imagefile" onchange="onFileChange(event)" type="file"/>
        <img id="selectedImage" src="" />
      </div>
    </form>
  </div>

  <div v-if="showDeleteConfirmation" class="modal-container">
    <div class="delete-confirmation">
      <p>Are you sure you want to delete this post?</p>
      <div class="delete-buttons">
        <div class="flex-div"></div>
        <button v-on:click="showDeleteConfirmation = false" class="cancel-button">Cancel</button>
        <button v-bind:class="[isDeletingPost ? 'grey' : 'red']" v-on:click="confirmDelete()" class="delete-button">Delete</button>
      </div>


    </div>
  </div>

  <div v-for="p in posts" class="post-all">
    <div class="post">
      <div class="username">
        {{p.user.fullName}}
      </div>
      <div class="post-body">
        {{p.text}}
      </div>
      <div>
        <img class="post-img" :src="p.imageUrl">
      </div>
      <button class="delete-post" v-on:click="deletePost(p)">Delete Post</button>
    </div>
  </div>
</div>

<script>
  const App = new Vue({
    el: '#app',
    data: {
      posts: window.SAILS_LOCALS.allPosts,
      showDeleteConfirmation: false,
      selectedPostToDelete: null,
      isDeletingPost: false
    },
    methods: {
      confirmDelete: async function() {
        //Send delete request
        const postId = this.selectedPostToDelete.id

        try {
          this.isDeletingPost = true
          await axios.delete(`/post/${postId}`)
          this.showDeleteConfirmation = false
          this.posts = this.posts.filter(p => {
            return p.id != this.selectedPostToDelete.id
          })
          this.isDeletingPost = false
        } catch(err) {
          console.error(err.toString())
        }
      },

      deletePost: async function(post) {
        this.selectedPostToDelete = post
        this.showDeleteConfirmation = true

        return
      }
    }
  })
</script>
